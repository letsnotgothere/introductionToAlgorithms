parse({"input": [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 0], [0, 0, 0, 0, 0, 0, 5, 3, 0], [0, 0, 0, 0, 0, 11, 4, 8, 0], [0, 0, 0, 0, 1, 10, 0, 9, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], "steps": [[{"coords": [[0, 4], [1, 4], [2, 4], [3, 4], [4, 4], [5, 4], [6, 4], [7, 4], [8, 4]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [4, 4]}, {"type": "findingNeighbor", "coord": [4, 4]}, {"type": "foundNeighbor", "coord": [4, 5]}, {"startRow": 0, "numRows": 9, "startCol": 5, "type": "subproblem", "numCols": 4}, {"coords": [[0, 2], [1, 2], [2, 2], [3, 2], [4, 2], [5, 2], [6, 2], [7, 2], [8, 2]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [4, 2]}, {"type": "findingNeighbor", "coord": [4, 2]}, {"type": "foundPeak", "coord": [4, 2]}], [{"type": "findingNeighbor", "coord": [0, 0]}, {"type": "foundPeak", "coord": [0, 0]}], [{"coords": [[4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [0, 4], [1, 4], [2, 4], [3, 4], [4, 4], [5, 4], [6, 4], [7, 4], [8, 4]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [4, 5]}, {"type": "findingNeighbor", "coord": [4, 5]}, {"type": "foundNeighbor", "coord": [3, 5]}, {"type": "bestSeen", "coord": [3, 5]}, {"startRow": 0, "numRows": 4, "startCol": 5, "type": "subproblem", "numCols": 4}, {"coords": [[2, 0], [2, 1], [2, 2], [2, 3], [0, 2], [1, 2], [2, 2], [3, 2]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [3, 2]}, {"type": "findingNeighbor", "coord": [3, 2]}, {"type": "foundPeak", "coord": [3, 2]}], [{"coords": [[4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [4, 5]}, {"type": "findingNeighbor", "coord": [4, 5]}, {"type": "foundNeighbor", "coord": [3, 5]}, {"type": "bestSeen", "coord": [3, 5]}, {"startRow": 0, "numRows": 4, "startCol": 0, "type": "subproblem", "numCols": 9}, {"coords": [[0, 4], [1, 4], [2, 4], [3, 4]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [0, 4]}, {"type": "findingNeighbor", "coord": [0, 4]}, {"startRow": 0, "numRows": 4, "startCol": 5, "type": "subproblem", "numCols": 4}, {"coords": [[2, 0], [2, 1], [2, 2], [2, 3]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [2, 1]}, {"type": "findingNeighbor", "coord": [2, 1]}, {"startRow": 3, "numRows": 1, "startCol": 5, "type": "subproblem", "numCols": 4}, {"coords": [[0, 2]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [0, 2]}, {"type": "findingNeighbor", "coord": [0, 2]}, {"startRow": 3, "numRows": 1, "startCol": 5, "type": "subproblem", "numCols": 2}, {"coords": [[0, 0], [0, 1]], "type": "findingMaximum"}, {"type": "foundMaximum", "coord": [0, 0]}, {"type": "findingNeighbor", "coord": [0, 0]}, {"type": "foundPeak", "coord": [0, 0]}]]})